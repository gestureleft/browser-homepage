{"version":3,"sources":["firebase.js","components/TodoItem.js","contexts/UserContext.js","components/Todo.js","components/Clock.js","components/DailyPicture.js","components/DailyPictureContainer.js","UseFetchNasaImage.js","components/Toolbar.js","components/Countdown.js","App.js","UseFirebaseLogin.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","TodoItem","todo","useState","todoText","className","contentEditable","suppressContentEditableWarning","rows","onInput","e","el","target","firestore","collection","doc","id","set","textContent","onInputChange","onClick","delete","UserContext","createContext","UserContextProvider","props","React","value","user","Provider","children","Todo","todos","setTodos","useEffect","unsubscribe","where","uid","onSnapshot","data","docs","map","handleNewTodo","add","useFetchTodos","useContext","key","Clock","intervalID","Date","toLocaleTimeString","time","setTime","toLocaleDateString","date","setDate","setInterval","clearInterval","DailyPicture","imageData","handleDismiss","src","url","alt","description","DailyPictureContainer","loading","state","setState","fetch","then","response","json","responseJson","useFetchNasaImage","showImage","setShowImage","renderContent","media_type","Toolbar","action","method","type","name","photoURL","Countdown","days","Timestamp","countdownDate","setCountdownDate","useFetchCountdown","toDate","getTime","parseInt","xmlns","width","height","viewBox","stroke-width","stroke","fill","stroke-linecap","stroke-linejoin","d","cx","cy","r","App","doLogIn","loggedIn","provider","auth","GoogleAuthProvider","signInWithPopup","result","username","displayName","email","profilePicture","catch","error","console","log","useFirebaseLogin","Consumer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4d0dd4df.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA1HdGlvBPqUMpEEaj-__8CobGnhEEfLSo\",\r\n    authDomain: \"browser-homepage-299d7.firebaseapp.com\",\r\n    databaseURL: \"https://browser-homepage-299d7.firebaseio.com\",\r\n    projectId: \"browser-homepage-299d7\",\r\n    storageBucket: \"browser-homepage-299d7.appspot.com\",\r\n    messagingSenderId: \"618508347241\",\r\n    appId: \"1:618508347241:web:a3d10661715e74bf87bff8\",\r\n    measurementId: \"G-1EZHY255FX\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","import React, { useState, useEffect } from 'react';\r\nimport firebase from '../firebase';\r\n\r\nimport './TodoItem.css';\r\n\r\nfunction TodoItem({ todo }) {\r\n    const [todoText, setTodoText] = useState(todo.todoText);\r\n\r\n    const onInputChange = (e) => {\r\n        const el = e.target;\r\n        const db = firebase.firestore();\r\n        db.collection(\"todos\").doc(todo.id).set({...todo, todoText: el.textContent});\r\n    }\r\n\r\n    const onDelete = () => {\r\n        const db = firebase.firestore();\r\n        db.collection(\"todos\").doc(todo.id).delete();\r\n    }\r\n\r\n    return (\r\n        <div className=\"TodoItem\">\r\n            <span contentEditable=\"true\" suppressContentEditableWarning rows=\"1\" className=\"todoitem-value-input\" onInput={e => onInputChange(e)} >\r\n                {todoText}\r\n            </span>\r\n            <button className=\"delete-button\" onClick={onDelete}>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoItem;","import React, { createContext } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst UserContextProvider = (props) => {\r\n    const [user, setUser] = React.useState(props.value);\r\n    return (\r\n        <UserContext.Provider value={{user}}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default UserContextProvider;","import React, { useContext, useState, useEffect } from 'react';\r\nimport firebase from '../firebase';\r\n\r\nimport './Todo.css';\r\nimport TodoItem from './TodoItem.js';\r\n\r\nimport { UserContext } from '../contexts/UserContext.js';\r\n\r\nconst useFetchTodos = (user) => {\r\n\r\n    let [todos, setTodos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = firebase.firestore().collection(\"todos\").where(\"user\", \"==\", user.uid).onSnapshot(\r\n            data => {\r\n                const todos = data.docs.map(doc => ({ ...doc.data(), id: doc.id }));\r\n                setTodos(todos);\r\n            }\r\n        );\r\n        return () => unsubscribe();\r\n    }, [user]);\r\n\r\n    const handleNewTodo = () => {\r\n        const db = firebase.firestore();\r\n        db.collection(\"todos\").add({ user: user.uid, todoText: \"\" });\r\n    }\r\n\r\n    return { todos, handleNewTodo };\r\n}\r\n\r\nfunction Todo() {\r\n    const user = useContext(UserContext).user;\r\n    const { todos, handleNewTodo } = useFetchTodos(user);\r\n\r\n    return (\r\n        <div className=\"Todo\">\r\n            <div className=\"Todo-scrollable\">\r\n                <div className=\"TodoItem-list-header\">\r\n                    <h1>\r\n                        Tasks:\r\n                    </h1>\r\n                </div>\r\n                <div className=\"TodoItem-container\">\r\n                    {todos.map(todo =>\r\n                        <TodoItem todo={todo} key={todo.id} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <button onClick={handleNewTodo} className=\"new-item-button\">\r\n                <span className=\"plus-icon\">+</span>\r\n            </button>\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Todo;","import React, { useState } from 'react';\r\nimport \"./Clock.css\";\r\n\r\nfunction Clock() {\r\n    \r\n    const [time, setTime] = React.useState(new Date().toLocaleTimeString());\r\n    const [date, setDate] = React.useState(new Date().toLocaleDateString());\r\n\r\n    let intervalID;\r\n\r\n    useState(() => {\r\n        intervalID = setInterval(\r\n            () => tick(),\r\n            1000\r\n        );\r\n        return function cleanup() {\r\n            clearInterval(intervalID);\r\n        }\r\n    });\r\n\r\n    function tick() {\r\n        setTime(new Date().toLocaleTimeString());\r\n        setDate(new Date().toLocaleDateString());\r\n    }\r\n\r\n    return (\r\n        <div className=\"Clock\">\r\n            <h1>{time}</h1>\r\n            <h2>{date}</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Clock;","/*\r\n    Contains the presentation for the Daily NASA image\r\n*/\r\nimport './DailyPicture.css'\r\n\r\nimport React from 'react';\r\n\r\nimport './DailyPicture.css';\r\n\r\nfunction DailyPicture({imageData, handleDismiss}) {\r\n\r\n    return (\r\n        <div className=\"daily-picture-image-container\">\r\n            <div className=\"daily-picture-header\">\r\n                <h4>Photo of the day</h4>\r\n                <button onClick={() => handleDismiss()}><h4>X</h4></button>\r\n            </div>\r\n            <img id=\"daily-picture\" src={imageData.url} alt={imageData.description}></img>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DailyPicture;","/*\r\n    Contains the logic for fetching the NASA Daily Picture, and passing it to DailyPicture\r\n*/\r\n\r\nimport React from 'react';\r\n\r\nimport DailyPicture from './DailyPicture.js';\r\n\r\nimport { useFetchNasaImage } from '../UseFetchNasaImage';\r\n\r\nconst DailyPictureContainer = () => {\r\n\r\n    const {imageData, loading} = useFetchNasaImage('https://api.nasa.gov/planetary/apod?api_key=MQ3fdEwBjHpJaX8bEboo4f8XZPVM58hy7OsoRql3');\r\n    const [showImage, setShowImage] = React.useState(true);\r\n\r\n    let renderContent = \"\";\r\n\r\n    if(showImage) {\r\n        renderContent = \r\n            loading  // if\r\n            ? \"Loading..\" \r\n            : \r\n            imageData.media_type !== 'video'  // else if\r\n            ? <DailyPicture imageData={imageData} handleDismiss={() => setShowImage(false)}/>\r\n            : \"\"\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderContent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DailyPictureContainer;","import { useEffect, useState } from 'react';\r\n\r\nexport const useFetchNasaImage = (url) => {\r\n\r\n    const [state, setState] = useState({imageData: null, loading: true});\r\n\r\n    useEffect(() => {\r\n        setState(state => ({imageData: state.imageData, loading: true}));\r\n        \r\n        fetch(url)\r\n            .then(response => response.json()\r\n            .then(responseJson => {\r\n                setState({imageData: responseJson, loading: false});\r\n        }));\r\n    }, [url]);\r\n\r\n    return state;\r\n}","import React, { useContext } from 'react';\r\nimport './Toolbar.css';\r\n\r\nimport { UserContext } from '../contexts/UserContext.js';\r\n\r\nconst Toolbar = () => {\r\n    const user = useContext(UserContext).user;\r\n    return (\r\n        <div className=\"toolbar\">\r\n            <form className=\"google-search-form\" action=\"https://www.google.com/search\" method=\"GET\">\r\n                <label className=\"google-search-label\">Google</label>\r\n                <input className=\"google-search-input\" type=\"text\" name=\"q\"></input>\r\n                <input className=\"google-search-button\" type=\"submit\" value=\"Search\"></input>\r\n            </form>\r\n            <div className=\"profile-picture-container\">\r\n                <img className=\"profile-picture\" src={user.photoURL} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Toolbar;","import React, { useState, useContext, useEffect } from 'react';\r\nimport firebase from '../firebase';\r\nimport Calendar from 'react-calendar';\r\n\r\nimport './Countdown.css';\r\nimport { UserContext } from '../contexts/UserContext';\r\n\r\n\r\nconst useFetchCountdown = (user) => {\r\n\r\n    let [countdownDate, setCountdownDate] = useState({ time: new firebase.firestore.Timestamp() });\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = firebase.firestore().collection('countdowns').where('user', '==', user.uid).onSnapshot(\r\n            data => {\r\n                setCountdownDate(data.docs[0].data());\r\n            }\r\n        );\r\n        return () => unsubscribe();\r\n    }, [user]);\r\n\r\n    return countdownDate;\r\n}\r\n\r\nconst Countdown = () => {\r\n    const user = useContext(UserContext).user;\r\n    const n = useFetchCountdown(user);\r\n    const days = (n.time.toDate().getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24)\r\n    return (\r\n        <div className=\"coutdown-component\">\r\n            <div className=\"countdown-container\">\r\n                {parseInt(days)} days left until birthday.\r\n            </div>\r\n            <div className=\"calendar-container\">\r\n                {/* <Calendar /> */}\r\n                <button>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"icon icon-tabler icon-tabler-settings\" width=\"44\" height=\"44\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                        <path d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\r\n                        <circle cx=\"12\" cy=\"12\" r=\"3\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Countdown;","import React from 'react';\n\nimport Todo from './components/Todo.js';\nimport Clock from './components/Clock.js';\nimport DailyPictureContainer from './components/DailyPictureContainer.js';\nimport Toolbar from './components/Toolbar.js';\nimport Countdown from './components/Countdown.js';\n\nimport { useFirebaseLogin } from './UseFirebaseLogin.js';\n\nimport './App.css';\nimport UserContextProvider from './contexts/UserContext.js';\n\nfunction App() {\n\n  const doLogIn = true;\n  const { user, loggedIn } = useFirebaseLogin(doLogIn);\n  const { Provider, Consumer } = React.createContext();\n\n  let renderContent = 'Not Logged In';\n\n  if (loggedIn) {\n    renderContent =\n      <UserContextProvider value={user}>\n        <div className=\"App\">\n          <div className=\"toolbar-container\">\n            <Toolbar />\n          </div>\n          <div className=\"main-content-container\">\n          <div className=\"todo-container\">\n            <Todo />\n          </div>\n          <div className=\"col-two-container\">\n            <Clock />\n          </div>\n          <div className=\"col-three-container\">\n            <Countdown />\n          </div>\n          <div className=\"col-four-container\">\n            <DailyPictureContainer />\n          </div>\n          </div>\n        </div>\n      </UserContextProvider>\n  }\n\n  return (\n    renderContent\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\r\nimport firebase from './firebase';\r\n\r\nexport const useFirebaseLogin = (doLogIn) => {\r\n\r\n    const [state, setState] = useState({ user: null, loggedIn: false });\r\n\r\n    useEffect(() => {\r\n        setState(state => ({ user: state.user, loggedIn: false }));\r\n\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider).then(function (result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            //var token = result.credential.accessToken;\r\n            // ...\r\n            const user = result.user;\r\n            firebase.firestore().collection('users').doc(user.uid).set({\r\n                username: user.displayName,\r\n                email: user.email,\r\n                profilePicture: user.photoURL\r\n            })\r\n                .then()\r\n                .catch(error => console.log(error));\r\n            setState({ user: result.user, loggedIn: true });\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n            // Handle Errors here.\r\n            //var errorCode = error.code;\r\n            //var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            //var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            //var credential = error.credential;\r\n            // ...\r\n        });\r\n    }, [doLogIn]);\r\n\r\n    return state;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}